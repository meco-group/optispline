image: jgillis/meco_builder:xenial

#pma-rob-dbs.mech.kuleuven.be/meco/meco

stages:
  - binaries
  - tests

variables:
    CI_PROJECT_NAME: cpp_splines
    DEBIAN_BINARIES: /Dropbox/meco_binaries_debian
    WINDOWS_BINARIES: /Dropbox/meco_binaries_windows
    OSX_BINARIES: /Dropbox/meco_binaries_osx
    BINARIES: meco_binaries_${BUILD_OS}
    MATLABPATH: $DEBIAN_BINARIES
    PYTHONPATH: $PYTHONPATH:$DEBIAN_BINARIES
    MOSEKLM_LICENSE_FILE: /repo/mosek/8/mosek.lic
    MPLBACKEND: Agg

before_script:
    - rm -rf build
    - source /opt/meco_setup && rclone_setup
    - source env.sh
    - rclone sync dropbox:meco_binaries_debian/$SWIG_HOME_REL $SWIG_HOME
    - rclone sync --include meco_binaries.* dropbox:$BINARIES $DEBIAN_BINARIES
    - chmod +x $SWIG_HOME/bin/swig
    - set -e
    - mkdir build
    - pwd
    - ls
    - echo $CASADI_PREFIX
    - sudo apt-get install -y xvfb mesa-utils libgl1-mesa-glx
    - Xvfb :0 -screen 0 800x600x24 &
    - export DISPLAY=:0
    - export LIBGL_DEBUG=verbose

after_script:
    - source env.sh
    - set -e
    - pushd build
    - export TARGET=meco_binaries_${BUILD_OS}/${BUILD_LANG}/${CI_PROJECT_NAME}/$CI_BUILD_REF_NAME
    - TZ=CET touch swig/build_`date -Iseconds`.log
    - rm -rf swig/*.pyc swig/CMakeFiles
    - echo $TARGET

    - rclone delete dropbox:$TARGET || echo "okay"
    - rclone --transfers 2 sync swig/ dropbox:$TARGET --exclude CMakeFiles || rclone sync swig/ dropbox:$TARGET --exclude CMakeFiles || rclone sync swig/ dropbox:$TARGET --exclude CMakeFiles

coverage:
  stage: tests
  variables:
        BUILD_OS: debian
        BUILD_LANG: python27
        CMAKE_PYTHON_LIBRARY: "/root/miniconda2/envs/condapy2.7/lib/libpython2.7.so"
        CMAKE_PYTHON_INCLUDE_DIR: "/root/miniconda2/envs/condapy2.7/include/python2.7"
  script:
    - set -e
    - source activate condapy2.7
    - rclone sync dropbox:$BINARIES/$CASADI_PREFIX_REL $CASADI_PREFIX
    - pushd build
    - cmake -DWITH_COVERAGE=ON -DPYTHON_LIBRARY=$CMAKE_PYTHON_LIBRARY -DPYTHON_INCLUDE_DIR=$CMAKE_PYTHON_INCLUDE_DIR -DCMAKE_BUILD_TYPE=Debug -DWITH_MATLAB=OFF ..
    - make VERBOSE=1
    - ctest -V -R python_test
    - gcovr -e  ".*wrap.cxx" -r ..
  after_script:
    - echo 123

debian-matlab:
  stage: binaries
  variables:
        BUILD_OS: debian
        MATLABRELEASE: R2014a
        BUILD_LANG: matlab$MATLABRELEASE
  script:
    - set -e
    - rclone sync dropbox:$BINARIES/$CASADI_PREFIX_REL $CASADI_PREFIX
    - export MATLAB_ROOT=/repo/matlabR2014a

    - pushd build

    - cmake -DWITH_PYTHON=OFF ..
    - make VERBOSE=1
    - cp src/*.so swig

    - export PATH=$PATH:$MATLAB_ROOT/bin/
    - ctest -V -R matlab

.debian_python_template: &debian_python_definition
  stage: binaries
  script:
    - set -e
    - source activate condapy$PYTHON_VERSION
    - rclone sync dropbox:$BINARIES/$CASADI_PREFIX_REL $CASADI_PREFIX
    - pushd build
    - cmake -DPYTHON_LIBRARY=$CMAKE_PYTHON_LIBRARY -DPYTHON_INCLUDE_PATH=$CMAKE_PYTHON_INCLUDE_DIR -DPYTHON_VERSION=$PYTHON_VERSION -DWITH_MATLAB=OFF ..
    - make VERBOSE=1
    - cp src/*.so swig

    - ctest -V -R python
    - if [ $WITH_VALGRIND ]; then ctest -V -R valgrind; fi

debian-python27:
  <<: *debian_python_definition
  variables:
     BUILD_OS: debian
     PYTHON_VERSION: "2.7"
     BUILD_LANG: python27
     WITH_VALGRIND: "ON"
     CMAKE_PYTHON_LIBRARY: "/root/miniconda2/envs/condapy2.7/lib/libpython2.7.so"
     CMAKE_PYTHON_INCLUDE_DIR: "/root/miniconda2/envs/condapy2.7/include/python2.7"
    
debian-python36:
  <<: *debian_python_definition
  variables:
    BUILD_OS: debian
    PYTHON_VERSION: "3.6"
    BUILD_LANG: python36
    CMAKE_PYTHON_LIBRARY: "/root/miniconda2/envs/condapy3.6/lib/libpython3.6m.so"
    CMAKE_PYTHON_INCLUDE_DIR: "/root/miniconda2/envs/condapy3.6/include/python3.6m"

windows-matlab:
  stage: binaries
  variables:
        BUILD_OS: windows
        MATLABRELEASE: R2014a
        BUILD_LANG: matlab$MATLABRELEASE
  script:
    - set -e
    - export CASADI_PREFIX_REL=$BUILD_LANG/casadi/$CASADIVERSION/
    - export CASADI_PREFIX=$WINDOWS_BINARIES/$CASADI_PREFIX_REL
    - rclone sync dropbox:$BINARIES/$CASADI_PREFIX_REL $CASADI_PREFIX
    - export MATLAB_ROOT=/repo/matlabR2014a-win
    - pushd build
    - cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchain64.cmake -DWITH_PYTHON=OFF ..
    - make VERBOSE=1
    - cp src/*.dll swig

windows-python:
  stage: binaries
  variables:
        BUILD_OS: windows
        BUILD_LANG: python27
  script:
    - set -e
    - export NUMPYSUFFIX=win32
    - export CASADI_PREFIX_REL=$BUILD_LANG/casadi/$CASADIVERSION
    - export CASADI_PREFIX=$WINDOWS_BINARIES/$CASADI_PREFIX_REL
    - rclone sync dropbox:$BINARIES/$CASADI_PREFIX_REL $CASADI_PREFIX
    - echo "find_library(PYTHON_LIBRARY NAMES python27 PATHS $HOME/.wine/drive_c/Python27/libs NO_SYSTEM_ENVIRONMENT_PATH)" > tmp.txt
    - echo "find_path(PYTHON_INCLUDE_DIR NAMES Python.h PATHS $HOME/.wine/drive_c/Python27/include NO_SYSTEM_ENVIRONMENT_PATH)" >> tmp.txt
    - echo "set(PYTHON_EXECUTABLE $HOME/.wine/drive_c/Python27/python.exe)" >> tmp.txt
    - echo "set(NUMPY_INCLUDE_DIR $HOME/.wine/drive_c/Python27/Lib/site-packages/numpy-1.9.1-py2.7-$NUMPYSUFFIX.egg/numpy/core/include)" >> tmp.txt
    - echo "set(NUMPY_INCLUDED_DIRS $HOME/.wine/drive_c/Python27/Lib/site-packages/numpy-1.9.1-py2.7-$NUMPYSUFFIX.egg/numpy/core/include/numpy)" >> tmp.txt
    - echo "set(NUMPY_PATH $HOME/.wine/drive_c/Python27/Lib/site-packages/numpy-1.9.1-py2.7-$NUMPYSUFFIX.egg/numpy/core/include/numpy)" >> tmp.txt
    - cat swig/CMakeLists.txt >> tmp.txt
    - mv tmp.txt swig/CMakeLists.txt
    - which swig
    - mkdir -p swig/python && pushd swig && swig -I$SWIG_LIB/python -co pyrun.swg && sed -i -e 's/\"SwigPyObject\"/\"SwigPyCasadiObject\"/g' pyrun.swg && popd
    - pushd build
    - cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchain32.cmake -DWITH_MATLAB=OFF ..
    - make VERBOSE=1
    - cp src/*.dll swig
    - sed -i -e "s/'SwigPyObject'/'SwigPyCasadiObject'/g" swig/splines.py

osx-matlab:
  stage: binaries
  variables:
        BUILD_OS: osx
        MATLABRELEASE: R2014a
        BUILD_LANG: matlab$MATLABRELEASE
  script:
    - set -e
    - pushd build
    - export CASADI_PREFIX_REL=$BUILD_LANG/casadi/$CASADIVERSION/
    - export CASADI_PREFIX=$OSX_BINARIES/$CASADI_PREFIX_REL
    - rclone sync dropbox:$BINARIES/$CASADI_PREFIX_REL $CASADI_PREFIX
    - export MATLAB_ROOT=/repo/matlabR2014a-osx
    - ls /repo
    - ls /Dropbox
    - ls $MATLAB_ROOT

    - export CXX=/usr/osxcross/bin/o64-clang++-libc++
    - export CC=/usr/osxcross/bin/o64-clang
    - printenv | grep -v rclone > /builds/env.txt
    - printenv
    - env
    - docker run -i --rm --env-file /builds/env.txt -v /home/meco/builds:/builds:rw -v /home/meco/repo:/repo:rw -v /home/meco/Dropbox:/Dropbox:rw -e CROSS_TRIPLE=x86_64-apple-darwin -w `pwd` multiarch/crossbuild cmake -DCMAKE_SYSTEM_NAME=Darwin -DCMAKE_TOOLCHAIN_FILE=/usr/share/cmake-3.0/Modules/Platform/Darwin.cmake -DWITH_PYTHON=OFF -DMATLAB_INCLUDE_DIR="$MATLAB_ROOT/extern/include" -DMATLAB_LIBRARIES="$MATLAB_ROOT/bin/maci64/libut.dylib;$MATLAB_ROOT/bin/maci64/libmex.dylib;$MATLAB_ROOT/bin/maci64/libmx.dylib;$MATLAB_ROOT/bin/maci64/libeng.dylib" -DMATLAB_EXTRA_CXXFLAGS="-D__STDC_UTF_16__" -DMATLAB_MEX_EXT="mexmaci64" ..
    - docker run -i --rm --env-file /builds/env.txt -v /home/meco/builds:/builds:rw -v /home/meco/repo:/repo:rw -v /home/meco/Dropbox:/Dropbox:rw -e CROSS_TRIPLE=x86_64-apple-darwin -w `pwd` multiarch/crossbuild make VERBOSE=1
    - docker run -i --rm --env-file /builds/env.txt -v /home/meco/builds:/builds:rw -v /home/meco/repo:/repo:rw -v /home/meco/Dropbox:/Dropbox:rw -e CROSS_TRIPLE=x86_64-apple-darwin -w `pwd` multiarch/crossbuild install_name_tool -change `realpath src/libsplines.dylib` "@rpath/libsplines.dylib" swig/splinesMEX.mexmaci64
    - docker run -i --rm --env-file /builds/env.txt -v /home/meco/builds:/builds:rw -v /home/meco/repo:/repo:rw -v /home/meco/Dropbox:/Dropbox:rw -e CROSS_TRIPLE=x86_64-apple-darwin -w `pwd` multiarch/crossbuild install_name_tool -add_rpath "@loader_path/" swig/splinesMEX.mexmaci64
    - cp src/*.dylib swig

    - export PATH=$PATH:$MATLAB_ROOT/bin/

